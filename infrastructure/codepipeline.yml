AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  Region:
    Description: The aws region where pipeline is hosted
    Type: String
    Default: eu-west-1
  Branch:
    Description: Source of pipeline script
    Type: String
    Default: master
  BootstrapPipelineName:
    Description: The name of the of pipeline
    Type: String
    Default: subzero-bootstrap-pipeline

Resources:
  backendPipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "backend-pipeline-policy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - '*'
            Effect: Allow
            Resource: "*"

  backendPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "backendPipelinePipelineCreator"
      AssumeRolePolicyDocument:
        Statement:
          - Action: [ 'sts:AssumeRole' ]
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns:
        - !Ref backendPipelinePolicy

  slsBackendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: sls-pipeline
      RoleArn:
        Fn::GetAtt: [ backendPipelineRole, Arn ]
      Stages:
        - Name: Source
          Actions:
          - Name: OT-Binpacking-Serverless
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Version: 1
              Provider: GitHub
            Configuration:
              Owner: Optimization-Technologies
              Repo:  OT-Binpacking-Serverless
              Branch: master
              PollForSourceChanges: false
              OAuthToken: '{{resolve:secretsmanager:GITHUB_WEBHOOK_TOKEN_SOLVER_SERVICE:SecretString:token}}'
            OutputArtifacts:
              - Name: SourceArtifact
            Region: !Sub ${Region}
        - Name: Deploy
          Actions:
          - Name: DeployBackend
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref deploySlsCodeBuild
            RunOrder: 2
            Region: !Ref Region
            InputArtifacts:
              - Name: SourceArtifact
      RestartExecutionOnUpdate: true
      ArtifactStore:
        Type: S3
        Location: !Sub "${BootstrapPipelineName}-artifact-bucket"

  sourceWebHookBackend:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      AuthenticationConfiguration:
        SecretToken: '{{resolve:secretsmanager:GITHUB_WEBHOOK_TOKEN_SOLVER_SERVICE:SecretString:token}}'
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: 'refs/heads/master'
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref subzeroBackendPipeline
      TargetAction: Subzero-Backend
      Name: "backendPipelineWebhook"
      TargetPipelineVersion: !GetAtt subzeroBackendPipeline.Version
      RegisterWithThirdParty: 'true'
    DependsOn: subzeroBackendPipeline

  deploySlsCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: "Code build for deploying backend serverless application"
      ServiceRole: !GetAtt deploySlsCodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
        OverrideArtifactName: true
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: nikolaik/python-nodejs:python3.9-nodejs16
        PrivilegedMode: false
      Name: "sls-deploy-backend"
      Source:
        BuildSpec: infrastructure/buildspec.yml
        GitCloneDepth: 1
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      TimeoutInMinutes: 5

  deploySlsCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyName: "codeBuildAccess"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - '*'
            Effect: Allow
            Resource: '*'