AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Region:
    Description: The aws region where pipeline is hosted
    Type: String
    Default: eu-west-1

Resources:
  artifactBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "sls-visma-course-artifact-bucket"
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  backendPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "backendPipelinePipelineCreator"
      AssumeRolePolicyDocument:
        Statement:
          - Action: [ 'sts:AssumeRole' ]
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: "backendPipelinePolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Action:
              - '*'
              Effect: Allow
              Resource: '*'

#  deploySlsCodeBuildRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Statement:
#        - Action: ['sts:AssumeRole']
#          Effect: Allow
#          Principal:
#            Service:
#            - codebuild.amazonaws.com
#        Version: '2012-10-17'
#      Path: /
#      Policies:
#      - PolicyName: "codeBuildAccess"
#        PolicyDocument:
#          Version: '2012-10-17'
#          Statement:
#          - Action:
#            - '*'
#            Effect: Allow
#            Resource: '*'
#
#  deploySlsCodeBuild:
#    Type: AWS::CodeBuild::Project
#    Properties:
#      Description: "Code build for deploying backend serverless application"
#      ServiceRole: !GetAtt deploySlsCodeBuildRole.Arn
#      Artifacts:
#        Type: CODEPIPELINE
#        OverrideArtifactName: true
#      Environment:
#        Type: LINUX_CONTAINER
#        ComputeType: BUILD_GENERAL1_SMALL
#        Image: nikolaik/python-nodejs:python3.9-nodejs16
#        PrivilegedMode: false
#      Name: "sls-deploy-backend"
#      Source:
#        BuildSpec: infrastructure/buildspec.yml
#        GitCloneDepth: 1
#        Type: CODEPIPELINE
#      LogsConfig:
#        CloudWatchLogs:
#          Status: ENABLED
#      TimeoutInMinutes: 5

#  slsBackendPipeline:
#    Type: AWS::CodePipeline::Pipeline
#    Properties:
#      Name: sls-pipeline
#      RoleArn:
#        Fn::GetAtt: [ backendPipelineRole, Arn ]
#      Stages:
#        - Name: Source
#          Actions:
#          - Name: OT-Binpacking-Serverless
#            ActionTypeId:
#              Category: Source
#              Owner: ThirdParty
#              Version: 1
#              Provider: GitHub
#            Configuration:
#              Owner: Optimization-Technologies
#              Repo:  OT-Binpacking-Serverless
#              Branch: master
#              PollForSourceChanges: false
#              OAuthToken: '{{resolve:secretsmanager:GITHUB_WEBHOOK_TOKEN_SOLVER_SERVICE:SecretString:token}}'
#            OutputArtifacts:
#              - Name: SourceArtifact
#            Region: !Sub ${Region}
#        - Name: Deploy
#          Actions:
#          - Name: DeployBackend
#            ActionTypeId:
#              Category: Build
#              Owner: AWS
#              Version: 1
#              Provider: CodeBuild
#            Configuration:
#              ProjectName: !Ref deploySlsCodeBuild
#            RunOrder: 2
#            Region: !Ref Region
#            InputArtifacts:
#              - Name: SourceArtifact
#      RestartExecutionOnUpdate: true
#      ArtifactStore:
#        Type: S3
#        Location: !Ref artifactBucket
#
#  sourceWebHookBackend:
#    Type: 'AWS::CodePipeline::Webhook'
#    Properties:
#      AuthenticationConfiguration:
#        SecretToken: '{{resolve:secretsmanager:GITHUB_WEBHOOK_TOKEN_SOLVER_SERVICE:SecretString:token}}'
#      Filters:
#      - JsonPath: "$.ref"
#        MatchEquals: 'refs/heads/master'
#      Authentication: GITHUB_HMAC
#      TargetPipeline: !Ref subzeroBackendPipeline
#      TargetAction: Subzero-Backend
#      Name: "backendPipelineWebhook"
#      TargetPipelineVersion: !GetAtt subzeroBackendPipeline.Version
#      RegisterWithThirdParty: 'true'
#    DependsOn: subzeroBackendPipeline